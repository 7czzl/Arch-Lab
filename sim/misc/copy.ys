# 周泽龙，2016013231，软件61
	.pos 0
init:	
	irmovl  Stack, %esp
	irmovl  Stack, %ebp
	call    Main
	halt

# Sample linked list 数据定义
	.align 4
src:
	.long 0x00a
	.long 0x0b0 
	.long 0xc00
dest:
	.long 0x111
	.long 0x222 
	.long 0x333

Main:	
	pushl	%ebp
	rrmovl	%esp, %ebp
	irmovl  src, %edx
	pushl	%edx
	irmovl	dest, %edx
	pushl	%edx
	irmovl  $3, %edx
	pushl	%edx
	call	copy_block
	rrmovl	%ebp, %esp
	popl	%ebp
	ret

copy_block:	
	pushl	%ebp
	rrmovl	%esp, %ebp
	xorl	%eax, %eax	# 返回值置0
	mrmovl	8(%ebp), %ecx	# ecx = len
	mrmovl	12(%ebp), %edx  # edx = dest
	mrmovl  16(%ebp), %ebx  # ebx = src
	andl	%ecx, %ecx	# array length == 0 ?
	je	End

Loop:	
	mrmovl  (%ebx), %esi
	rmmovl	%esi, (%edx)	# copy src to dest
	xorl	%esi, %eax	# value ^= val
	irmovl	$4, %edi
	addl	%edi, %ebx	# src++	
	addl	%edi, %edx	# dest++
	irmovl  $1, %esi
	subl	%esi, %ecx	# len--
	andl	%ecx, %ecx	# len == 0 ?
	jne	Loop						
	
End:	
	rrmovl  %ebp, %esp
	popl	%ebp
	ret

# the stack starts address
	.pos 0x100
Stack:         
